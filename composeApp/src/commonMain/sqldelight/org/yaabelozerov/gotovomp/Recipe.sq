-- Таблицы для ленты и сохранённых рецептов - общие. Сохраненные будут помечены isFav = true. Все свои рецепты автоматически сохранённые
CREATE TABLE Recipe (
    id INTEGER NOT NULL PRIMARY KEY,
    name TEXT NOT NULL,
    authorUsername TEXT NOT NULL,
    text TEXT NOT NULL,
    isFav INTEGER NOT NULL DEFAULT 0,
    FOREIGN KEY (authorUsername) REFERENCES User(username)
);

-- Recipe queries
insertRecipe:
INSERT INTO Recipe(id, name, authorUsername, text, isFav)
VALUES (?, ?, ?, ?, ?);

updateRecipeFavoriteStatus:
UPDATE Recipe
SET isFav = ?
WHERE id = ?;

selectRecipeById:
SELECT * FROM Recipe
WHERE id = ?;

selectFullRecipeById:
SELECT Recipe.*, User.*
FROM Recipe
JOIN User ON Recipe.authorUsername = User.username
WHERE Recipe.id = ?;

selectFavoriteRecipes:
SELECT * FROM Recipe
WHERE isFav = 1;

-- Transaction
insertFullRecipe:
BEGIN TRANSACTION;

-- Insert or update author
INSERT OR REPLACE INTO User(username, firstName, lastName, phoneNumber)
VALUES (:authorUsername, :firstName, :lastName, :phoneNumber);

-- Insert the recipe
INSERT OR REPLACE INTO Recipe(id, name, authorUsername, text, isFav)
VALUES (:recipeId, :recipeName, :authorUsername, :recipeText, :isFav);

-- Insert ingredients (assuming they already exist in DB)
INSERT OR REPLACE INTO Ingredient(id, name, quantityType, quantity, category, additionalParameters)
VALUES (:ingredientId, :ingredientName, :quantityType, :quantity, :category, :additionalParameters);

-- Link recipe to ingredients
INSERT OR REPLACE INTO RecipeIngredient(recipeId, ingredientId)
VALUES (:recipeId, :ingredientId);

-- Insert tags (if they don't exist)
INSERT OR IGNORE INTO Tag(id, tag)
VALUES (:tagId, :tagText);

-- Link recipe to tags
INSERT OR REPLACE INTO RecipeTag(recipeId, tagId)
VALUES (:recipeId, :tagId);

COMMIT;